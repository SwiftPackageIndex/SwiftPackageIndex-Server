# Copyright Dave Verwer, Sven A. Schmidt, and other contributors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

version: '3.7'

# logging & monitoring visualiser

services:

  grafana:
    # https://github.com/grafana/grafana/releases
    image: grafana/grafana:11.5.1
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GF_SECURITY_ADMIN_PASSWORD}
      GF_USERS_ALLOW_SIGN_UP: 'false'
      GF_SERVER_ROOT_URL: "${GF_SERVER_ROOT_URL}"
    volumes:
      - grafana_data:/var/lib/grafana
    ports:
      - 3000:3000
    networks:
      - app_backend
    deploy:
      placement:
        constraints:
          # placement for data persistence
          - node.labels.grafana_node == true


  # logging

  loki:
    # https://github.com/grafana/loki/releases
    image: grafana/loki:3.3.2
    command: -config.file=/loki.yml
    configs:
      - source: loki_cfg
        target: /loki.yml
    networks:
      - app_backend


  promtail:
    # https://github.com/grafana/loki/releases
    # (promtail is released in parallel with loki)
    image: grafana/promtail:3.3.2
    command: -config.file=/promtail.yml
    configs:
      - source: promtail_cfg
        target: /promtail.yml
    volumes:
      - /var/lib/docker/containers:/var/log
    networks:
      - app_backend
    deploy:
      mode: global


  # monitoring

  prometheus:
    # https://github.com/prometheus/prometheus/releases
    image: prom/prometheus:v3.1.0
    volumes:
      - prometheus_data:/prometheus
    command: --config.file=/prometheus.yml --storage.tsdb.retention.time=30d
    configs:
      - source: prometheus_cfg
        target: /prometheus.yml
    networks:
      - app_backend
    deploy:
      placement:
        constraints:
          # placement for data persistence
          - node.labels.prometheus_node == true


  pushgateway:
    # https://github.com/prometheus/pushgateway/releases
    image: prom/pushgateway:v1.11.0
    networks:
      - app_backend


  node-exporter:
    # https://github.com/prometheus/node_exporter/releases
    image: prom/node-exporter:v1.8.2
    networks:
      - app_backend
    volumes:
      - /proc:/host/proc
      - /sys:/host/sys
      - /:/rootfs
    command: --path.procfs /host/proc --path.sysfs /host/sys --collector.textfile.directory /etc/node-exporter/ --collector.filesystem.mount-points-exclude "^/(sys|proc|dev|host|etc)($$|/)"
    deploy:
      mode: global


  cadvisor:
    # https://github.com/google/cadvisor/releases
    image: gcr.io/cadvisor/cadvisor:v0.51.0
    networks:
      - app_backend
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "/:/rootfs:ro"
      - "/var/run:/var/run:ro"
      - "/sys:/sys:ro"
      - "/var/lib/docker/:/var/lib/docker:ro"
      - "/dev/disk/:/dev/disk:ro"
    deploy:
      mode: global


configs:
  loki_cfg:
    file: ./infrastructure/loki.yml
  promtail_cfg:
    file: ./infrastructure/promtail.yml
  prometheus_cfg:
    file: ./infrastructure/prometheus.yml


volumes:
  grafana_data:
  prometheus_data:


networks:
  app_backend:
    external: true
